---
title: "Class 13: RNA-Seq Analysis Mini-Project"
author: Hannah Kim 
date: 05-17-23
format: pdf
---

# Section 1

```{r}
#Load library related to DESep2
library(DESeq2)
```

We will load our data files

```{r}
#specify file paths 
metaFile <- "GSE37704_metadata.csv"
countFile <- "GSE37704_featurecounts.csv"

# Import metadata and take a peak
colData = read.csv(metaFile, row.names=1)
head(colData)
```

```{r}
# Import countdata
countData = read.csv(countFile, row.names=1)
head(countData)
```

## **Q1**. Complete the code below to remove the troublesome first column from `countData`

```{r}
# We remove the frist $length column
countData <- as.matrix(countData[,-1])
head(countData)
```

## **Q2**. Complete the code below to filter `countData` to exclude genes (i.e. rows) where we have 0 read count across all samples (i.e. columns).

```{r}
#Filters count data where there is 0 read count for all samples
to_remove <- rowSums(countData) == 0 
countData = countData[!to_remove,]

```

## Running DESeq2

```{r}
#Create DESeqDataSet object
   dds = DESeqDataSetFromMatrix(countData=countData,
                                colData=colData,
                                design=~condition)
```

```{r}
# Diferential expression analysis 
dds = DESeq(dds)

#Display using print function 
print (dds)

#get results for the HoxA1 knockdown versus control siRNA in our original colData metaFile input to DESeq
res = results(dds, contrast=c("condition", "hoxa1_kd", "control_sirna"))
```

## **Q3**. Call the **summary()** function on your results to get a sense of how many genes are up or down-regulated at the default 0.1 p-value cutoff.

```{r}
summary(res)
```

```{r}
plot( res$log2FoldChange, -log(res$padj) )

```

## **Q4**. Improve this plot by completing the below code, which adds color and axis labels

```{r}
# Make a color vector for all genes
mycols <- rep("gray", nrow(res) )

# Color red the genes with absolute fold change above 2
mycols[ (res$res$log2FoldChange > 2)| (res$log2FoldChnage < 2)]
mycols[ abs(res$log2FoldChange) > 2 ] <- "red"

# Color blue those with adjusted p-value less than 0.01
#  and absolute fold change more than 2
inds <- (res$padj<0.01) & (abs(res$log2FoldChange) > 2 )
mycols[ inds ] <- "blue"

plot(x = res$log2FoldChange,
     y = -log(res$padj), 
     col=mycols, 
     xlab="Log2(FoldChange)", 
     ylab="-Log(P-value)" )
```

## **Q5**. Use the **mapIDs()** function multiple times to add SYMBOL, ENTREZID and GENENAME annotation to our results by completing the code below.

```{r}
library("AnnotationDbi")
library("org.Hs.eg.db")

# Display available columns in org.Hs.eg.db
columns(org.Hs.eg.db)

# Add SYMBOL annotation
res$symbol <- mapIds(org.Hs.eg.db,
                     keys = row.names(res),
                     keytype = "ENSEMBL",
                     column = "SYMBOL",
                     multiVals = "first")

# Add ENTREZID annotation
res$entrez <- mapIds(org.Hs.eg.db,
                     keys = row.names(res),
                     keytype = "ENSEMBL",
                     column = "ENTREZID",
                     multiVals = "first")

# Add GENENAME annotation
res$name <- mapIds(org.Hs.eg.db,
                   keys = row.names(res),
                   keytype = "ENSEMBL",
                   column = "GENENAME",
                   multiVals = "first")

# Display the updated results
head(res, 10)

```

## 

## Q6. Finally for this section let's reorder these results by adjusted p-value and save them to a CSV file in your current project directory

```{r}
# Order 'res' by p-value in ascending order
res = res[order(res$pvalue),]
#Save the ordered results to a CSV file
write.csv(res, file ="deseq_results.csv")
```

# Section 2: Pathway Analysis

We need to install the required bioconductor packages:

We run in the console "BiocManager :: install ( c("pathview", "gage", "gageData") )"

```{r}
#load up the pathview library 
library(pathview)

# Load up the gage library
library(gage)

#Load up the gageData library 
library(gageData)

# Load KEGG pathway sets for humans
data(kegg.sets.hs)

# Load gene set indices for significance metric calculations
data(sigmet.idx.hs)

# Focus on signaling and metabolic pathways only
kegg.sets.hs = kegg.sets.hs[sigmet.idx.hs]

# Examine the first 3 pathways
head(kegg.sets.hs, 3)
```

Note that we used the mapIDs() function above to obtain Entrez gene IDs. Change results from DESeq2 analysis (stored in res\$log2FoldChange).

```{r}
# Extract log2 fold changes from 'res'
foldchanges = res$log2FoldChange

# Assign Entrez gene IDs as names to 'foldchanges'
names(foldchanges) = res$entrez
  
# Display the first few entries of 'foldchanges'
head(foldchanges)
```

Then we run the gage pathway Analysis.

```{r}
# Get the results
keggres = gage(foldchanges, gsets=kegg.sets.hs)
```

Here, we're using the default same.dir=TRUE, which will give us separate lists for pathways that are upregulated versus pathways that are down-regulated. Now lets look at the object returned from gage().

```{r}
#View the attributes of "keggres"
attributes(keggres)
```

Like any list we can use the dollar syntax to access a named element, e.g. head(keggres\$greater) andhead(kegg Lets look at the first few down (less) pathway results:

```{r}
# Look at the first few down (less) pathways
head(keggres$less)
```

To begin with lets manually supply a pathway.id (namely the first part of the "hsa04110 Cell cycle") that we could see from the print out above.

```{r}
#visualize the pathway using "pathview"
pathview(gene.data=foldchanges, pathway.id="hsa04110")
```

![](images/hsa04110.pathview.png)

```{r}
# A different PDF based output of the same data
pathview(gene.data=foldchanges, pathway.id="hsa04110", kegg.native=FALSE)

```

```{r}
## Focus on top 5 upregulated pathways here for demo purposes only
keggrespathways <- rownames(keggres$greater)[1:5]

# Extract the 8 character long IDs part of each string
keggresids = substr(keggrespathways, start=1, stop=8)

#Print kreggresids
keggresids
```

You can play with the other input arguments to pathview() to change the display in various ways including generating a PDF graph. For example:

![](images/hsa04630.pathview-01.png)

![](images/hsa04640.pathview.png)

![](images/hsa00140.pathview.png)

![](images/hsa00140.pathview-01.png)

```{r}
# A different PDF based output of the same data
pathview(gene.data=foldchanges, pathway.id="hsa04110", kegg.native=FALSE)
```

## **Q7**. Can you do the same procedure as above to plot the pathview figures for the top 5 down-reguled pathways?

```{r}
# Focus on top 5 upregulated pathways here for demo purposes only
keggrespathways2 <- rownames(keggres$less)[1:5]

# Extract the 8 character long IDs part of each string
keggresids1 = substr(keggrespathways2, start=1, stop=8)
  
# Print keggresids1
keggresids1
```

# Section 3: Gene Ontology

Let's focus on BP (a.k.a Biological Process) here

```{r}
# Load GO sets and subsets for humans
data(go.sets.hs)
data(go.subs.hs)

# Focus on Biological Process subset of GO
gobpsets = go.sets.hs[go.subs.hs$BP]

# Perform gene set enrichment analysis
gobpres = gage(foldchanges, gsets=gobpsets, same.dir=TRUE)

# Display the first few entries of the results
lapply(gobpres, head)
```

# Section 4: Reactome Analysis

First, Using R, output the list of significant genes at the 0.05 level as a plain text file:

```{r}
# Filter for significant genes based on adjusted p-value threshold
sig_genes <- res[res$padj <= 0.05 & !is.na(res$padj), "symbol"]

#Print the total number of significant genes
print(paste("Total number of significant genes:", length(sig_genes)))
```

```{r}
# Write the significant genes to a text file
write.table(sig_genes, file="significant_genes.txt", row.names=FALSE, col.names=FALSE, quote=FALSE)

```

Then select the parameters "Project to Humans", then click "Analyze".

## **Q8**: What pathway has the most significant "Entities p-value"? Do the most significant pathways listed match your previous KEGG results? What factors could cause differences between the two methods?

Based on the achieved results, Cell Cycle (HSA-1640170), Mitotic (HSA-69620), and Mitotic Spindle Check-Point (HSA-69618) hve the most significant p-values. Comparing the data with KEGG indicates some inaccuracies and as mentioned Reactome data primarily focuses on pathway analysis rather than assessing individual gene significance. It provides information about biological pathways, their components, and their relationships, instead of offering statistical methods for determining gene significance.
