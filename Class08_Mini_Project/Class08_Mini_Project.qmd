---
title: "Class08_Mini_Project"
author: Hannah Kim
date: 04-28-23
format: pdf
---

# Preparing the Data

```{r}
# Save your input data file into your Project directory
fna.data <- "WisconsinCancer.csv"

# Complete the following code to input the data and store as wisc.df
wisc.df <- read.csv (fna.data, row.names=1)


```

```{r}
# We can use -1 here to remove the first column
wisc.data <- wisc.df[,-1]
```

```{r}
diagnosis <- wisc.df[1]
```

**Q1**. How many observations are in this dataset?

```{r}
nrow(wisc.df)
```

There are 569 observations.

**Q2**. How many of the observations have a malignant diagnosis?

```{r}
table(wisc.df$diagnosis)
diagnosis <- (wisc.df$diagnosis)
```

```{r}
length(grep("M", diagnosis))
```

There are 212 malignant diagnoses.

**Q3**. How many variables/features in the data are suffixed with `_mean`?

```{r}
length (grep("_mean", colnames(wisc.df)))
```

There are 10 variables/features that are suffixed with \_mean.

# Principle Component Analysis

```{r}
# Check column means and standard deviations
colMeans(wisc.data)

apply(wisc.data,2,sd)
```

```{r}
wisc.pr <- prcomp( wisc.data, scale = TRUE)
```

```{r}
y <- summary(wisc.pr)
```

**Q4**. From your results, what proportion of the original variance is captured by the first principal components (PC1)?

```{r}
wisc.var <- y$sdev^2
wisc.var.per<- round(wisc.var/sum(wisc.var)*100,1)

barplot (wisc.var.per, main = "Scree Plot", xlab = "Principle Component", ylab= "Percent Variation")
```

Around 40%

**Q5**. How many principal components (PCs) are required to describe at least 70% of the original variance in the data?

The first 3 PCAs.

**Q6**. How many principal components (PCs) are required to describe at least 90% of the original variance in the data?

The first 5 PCAs.

# Interpreting PCA Results

```{r}
biplot(wisc.pr)
```

**Q7.** What stands out to you about this plot? Is it easy or difficult to understand? Why?

The plot has many overlapping labels. It is difficult to understand because the rownames are used as plotting character for bigplots like this.

```{r}
# Scatter plot observations by components 1 and 2
plot( wisc.pr$x[,1], wisc.pr$x[,2] , col = as.factor(diagnosis), 
     xlab = "PC1", ylab = "PC2")  
```

**Q8.** Generate a similar plot for principal components 1 and 3. What do you notice about these plots?

The y-axis is different and smaller for the graph of PCA1 and PCA2.

```{r}
plot( wisc.pr$x[,1], wisc.pr$x[,3] , col = as.factor(diagnosis), 
     xlab = "PC1", ylab = "PC3")  
```

```{r}
# Create a data.frame for ggplot
df <- as.data.frame(wisc.pr$x)
df$diagnosis <- diagnosis

# Load the ggplot2 package
library(ggplot2)

# Make a scatter plot colored by diagnosis
ggplot(df) + 
  aes(PC1, PC2, col= as.factor(diagnosis)) + 
  geom_point()

```

```{r}
# Calculate variance of each component
pr.var <- wisc.pr$sdev^2
head(pr.var)
```

```{r}
# Variance explained by each principal component: pve
pve <- pr.var / sum(pr.var)

# Plot variance explained for each principal component
plot(pve, xlab = "Principal Component", 
     ylab = "Proportion of Variance Explained", 
     ylim = c(0, 1), type = "o")
```

```{r}
# Alternative scree plot of the same data, note data driven y-axis
barplot(pve, ylab = "Precent of Variance Explained",
     names.arg=paste0("PC",1:length(pve)), las=2, axes = FALSE)
axis(2, at=pve, labels=round(pve,2)*100 )
```

```{r}
## ggplot based graph
#install.packages("factoextra")
library(factoextra)
fviz_eig(wisc.pr, addlabels = TRUE)
```

# Communicating PCA Results

**Q9.** For the first principal component, what is the component of the loading vector (i.e. `wisc.pr$rotation[,1]`) for the feature `concave.points_mean`? This tells us how much this original feature contributes to the first PC.

For PCA 1 it is, -0.14258969

```{r}
wisc.pr$rotation

```

# Hierarchical Clustering

```{r}
# Scale the wisc.data data using the "scale()" function
data.scaled <- scale(wisc.data)
```

```{r}
data.dist <- dist(data.scaled)

```

```{r}
wisc.hclust <- hclust (data.dist, method = "complete" )

```

**Q10.** Using the `plot()` and `abline()` functions, what is the height at which the clustering model has 4 clusters?

Between 15 and 20

```{r}
plot(wisc.hclust)
abline(h = 18 , col="red", lty=2)

```

```{r}
wisc.hclust.clusters <- cutree(wisc.hclust, k = 4)

```

```{r}
table(wisc.hclust.clusters, diagnosis)

```

# Using Different Methods

**Q12.** Which method gives your favorite results for the same `data.dist` dataset? Explain your reasoning.

I prefer complete because it is easier to see the branches in the tree in comparison to single, average, and ward2 which show less separations into different branches.

```{r}
wisc.hclust.single <- hclust (data.dist, method = "single" )
wisc.hclust.complete <- hclust (data.dist, method = "complete" )
wisc.hclust.avg <- hclust (data.dist, method = "average" )
wisc.hclust.ward <- hclust (data.dist, method = "ward.D2" )
plot(wisc.hclust.single)
plot(wisc.hclust.complete)
plot(wisc.hclust.avg)
plot(wisc.hclust.ward)



```

# Combining Methods

Clustering on PCA Results

```{r}
grps <- cutree(wisc.hclust.ward , k=2)
table(grps)
```

```{r}
table(grps, diagnosis)

```

```{r}
plot(wisc.pr$x[,1:2], col=grps)

```

```{r}
plot(wisc.pr$x[,1:2], col= as.factor(diagnosis))

```

```{r}
g <- as.factor(grps)
levels(g)

g <- relevel(g,2)
levels(g)

```

```{r}
# Plot using our re-ordered factor 
plot(wisc.pr$x[,1:2], col=g)
```

**Q13**. How well does the newly created model with four clusters separate out the two diagnoses?

Not very well since there are large gaps in the diagnoses in comparison to the actual.

```{r}
## Use the distance along the first 7 PCs for clustering i.e. wisc.pr$x[, 1:7]
wisc.pr.hclust <- hclust(dist(wisc.pr$x[, 1:7]), method="ward.D2")
wisc.pr.hclust.clusters <- cutree(wisc.pr.hclust, k=2)
table(wisc.pr.hclust.clusters, diagnosis)

```

**Q14**. How well do the hierarchical clustering models you created in previous sections (i.e. before PCA) do in terms of separating the diagnoses? Again, use the `table()` function to compare the output of each model (`wisc.km$cluster` and `wisc.hclust.clusters`) with the vector containing the actual diagnoses.

```{r}
table(wisc.hclust.clusters, diagnosis)

```

**Q16.** Which of these new patients should we prioritize for follow up based on your results?

We should prioritize patient 2 since they are within the malignant or red cluster.

```{r}
#url <- "new_samples.csv"
url <- "https://tinyurl.com/new-samples-CSV"
new <- read.csv(url)
npc <- predict(wisc.pr, newdata=new)
npc

```

```{r}
plot(wisc.pr$x[,1:2], col=g)
points(npc[,1], npc[,2], col="blue", pch=16, cex=3)
text(npc[,1], npc[,2], c(1,2), col="white")

```
