{
  "hash": "2a74c2961b2a007477a0d325fe6ab6a9",
  "result": {
    "markdown": "---\ntitle: \"HW06\"\nauthor: Hannah Kim \ndate: 04-30-23\nformat: pdf\n---\n\n\n# Q6. How would you generalize the original code above to work with any set of input protein structures?\n\nTo generalize the original code to work with any protein structures as input, I wrote a function that takes a list of pdb file names as input. It then read in each pbd file, trims it to chain A, and then plots it.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#install.packages(\"bio3d\")\nlibrary(bio3d)\n\n# The input is a list of pdb file names. The function plot_B_factors then reads in each \n#file, trims it to chain A and then plots the B factors using 'plotB3' function. \nplot_B_factors <- function(file_list) {\n  for (file in file_list) {\n    # read in pdb file and trim to chain A\n    s <- read.pdb(file)\n    s.chainA <- trim.pdb(s, chain=\"A\", elety=\"CA\")\n    \n    # plot B-factors\n    s.b <- s.chainA$atom$b\n    plotb3(s.b, sse=s.chainA, typ=\"l\", ylab=\"Bfactor\")\n  }\n}\n\n#A list for the provided file names.\nfile_list <- c(\"4AKE\", \"1AKE\", \"1E4Y\")\n\n# Applied the plot_b_factors function. By providing the list of files names rather \n#than single files, the function can be applied to any protein structures without \n#editing the code each time. \nplot_B_factors(file_list)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  Note: Accessing on-line PDB file\n```\n:::\n\n::: {.cell-output-display}\n![](HW06_files/figure-pdf/unnamed-chunk-1-1.pdf){fig-pos='H'}\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\n  Note: Accessing on-line PDB file\n   PDB has ALT records, taking A only, rm.alt=TRUE\n```\n:::\n\n::: {.cell-output-display}\n![](HW06_files/figure-pdf/unnamed-chunk-1-2.pdf){fig-pos='H'}\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\n  Note: Accessing on-line PDB file\n```\n:::\n\n::: {.cell-output-display}\n![](HW06_files/figure-pdf/unnamed-chunk-1-3.pdf){fig-pos='H'}\n:::\n:::\n",
    "supporting": [
      "HW06_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": null,
    "postProcess": false
  }
}